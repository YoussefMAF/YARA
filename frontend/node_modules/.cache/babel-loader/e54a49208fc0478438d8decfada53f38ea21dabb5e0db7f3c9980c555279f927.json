{"ast":null,"code":"var _jsxFileName = \"/Users/raniaibnidrysgdah/YARA/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ChatHeader from \"./components/ChatHeader\";\nimport MessageList from \"./components/MessageList\";\nimport MessageInput from \"./components/MessageInput\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport './App.css';\n\n//address of backend server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = \"http://localhost:3001\";\n\n//display title\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"text-center mb-4\",\n    children: \" YARA - Movie Night Planner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n\n//colouring based on sender\n_c = Header;\nfunction Message({\n  sender,\n  text\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `p-2 mb-2 rounded ${sender === \"user\" ? \"bg-primary text-white text-end\" : \"bg-light text-start\"}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n//input area\n_c2 = Message;\nfunction InputArea({\n  userInput,\n  setUserInput,\n  sendMessage\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n//set up of chat state and socket connection\n_c3 = InputArea;\nexport default function App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [userInput, setUserInput] = useState(\"\");\n  const socketRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const socketInstance = io(SOCKET_SERVER_URL, {\n      transports: [\"websocket\"],\n      reconnectionAttempts: 5\n    });\n    socketInstance.on(\"bot-message\", incomingMsg => {\n      setIsTyping(false);\n      addMessage(\"bot\", incomingMsg);\n    });\n    socketInstance.on(\"typing\", () => {\n      setIsTyping(true);\n    });\n    socketInstance.on(\"stopTyping\", () => {\n      setIsTyping(false);\n    });\n    socketInstance.on(\"connect_error\", err => {\n      console.error(\"Socket connection failed:\", err);\n    });\n    socketRef.current = socketInstance;\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n  const addMessage = (sender, text) => {\n    const newMessage = {\n      id: Date.now() + Math.random(),\n      sender,\n      text,\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prev => [...prev, newMessage]);\n  };\n  const sendMessage = text => {\n    const trimmed = (text !== undefined ? text : userInput).trim();\n    if (trimmed.length === 0) return;\n    addMessage(\"user\", trimmed);\n    if (socketRef.current) {\n      socketRef.current.emit(\"user-message\", trimmed);\n    } else {\n      console.warn(\"Tried to send message but socket wasn't ready\");\n    }\n    setUserInput(\"\");\n  };\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  //chat window\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      messages: messages,\n      isTyping: isTyping,\n      messagesEndRef: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSendMessage: sendMessage,\n      userInput: userInput,\n      setUserInput: setUserInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qaHtiwT+SSMfEkCLs09gQjYDu3c=\");\n_c4 = App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Message\");\n$RefreshReg$(_c3, \"InputArea\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","ChatHeader","MessageList","MessageInput","ChatWindow","jsxDEV","_jsxDEV","SOCKET_SERVER_URL","Header","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Message","sender","text","_c2","InputArea","userInput","setUserInput","sendMessage","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","_c3","App","_s","messages","setMessages","isTyping","setIsTyping","socketRef","messagesEndRef","socketInstance","transports","reconnectionAttempts","on","incomingMsg","addMessage","err","console","error","current","disconnect","newMessage","id","Date","now","Math","random","timestamp","toLocaleTimeString","prev","trimmed","undefined","trim","length","emit","warn","_messagesEndRef$curre","scrollIntoView","behavior","onSendMessage","_c4","$RefreshReg$"],"sources":["/Users/raniaibnidrysgdah/YARA/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ChatHeader from \"./components/ChatHeader\";\nimport MessageList from \"./components/MessageList\";\nimport MessageInput from \"./components/MessageInput\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport './App.css';\n\n//address of backend server\nconst SOCKET_SERVER_URL = \"http://localhost:3001\";\n\n//display title\nfunction Header() {\n  return <h2 className=\"text-center mb-4\"> YARA - Movie Night Planner</h2>;\n}\n\n//colouring based on sender\nfunction Message({ sender, text }) {\n  return (\n    <div\n      className={`p-2 mb-2 rounded ${\n        sender === \"user\" ? \"bg-primary text-white text-end\" : \"bg-light text-start\"\n      }`}\n    >\n      {text}\n    </div>\n  );\n}\n\n//input area\nfunction InputArea({ userInput, setUserInput, sendMessage }) {\n  return (\n    <div className=\"input-group\">\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n        onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n        placeholder=\"Type your message...\"\n      />\n      <button className=\"btn btn-primary\" onClick={sendMessage}>\n        Send\n      </button>\n    </div>\n  );\n}\n\n//set up of chat state and socket connection\nexport default function App() {\n  const [messages, setMessages] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [userInput, setUserInput] = useState(\"\");\n  const socketRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    const socketInstance = io(SOCKET_SERVER_URL, {\n      transports: [\"websocket\"],\n      reconnectionAttempts: 5,\n    });\n\n    socketInstance.on(\"bot-message\", (incomingMsg) => {\n      setIsTyping(false);\n      addMessage(\"bot\", incomingMsg);\n    });\n\n    socketInstance.on(\"typing\", () => {\n      setIsTyping(true);\n    });\n\n    socketInstance.on(\"stopTyping\", () => {\n      setIsTyping(false);\n    });\n\n    socketInstance.on(\"connect_error\", (err) => {\n      console.error(\"Socket connection failed:\", err);\n    });\n\n    socketRef.current = socketInstance;\n\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n\n  const addMessage = (sender, text) => {\n    const newMessage = {\n      id: Date.now() + Math.random(),\n      sender,\n      text,\n      timestamp: new Date().toLocaleTimeString(),\n    };\n    setMessages((prev) => [...prev, newMessage]);\n  };\n\n  const sendMessage = (text) => {\n    const trimmed = (text !== undefined ? text : userInput).trim();\n    if (trimmed.length === 0) return;\n    addMessage(\"user\", trimmed);\n    if (socketRef.current) {\n      socketRef.current.emit(\"user-message\", trimmed);\n    } else {\n      console.warn(\"Tried to send message but socket wasn't ready\");\n    }\n    setUserInput(\"\");\n  };\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  //chat window\n  return (\n    <div className=\"container mt-4\">\n      <ChatHeader />\n      <MessageList\n        messages={messages}\n        isTyping={isTyping}\n        messagesEndRef={messagesEndRef}\n      />\n      <MessageInput\n        onSendMessage={sendMessage}\n        userInput={userInput}\n        setUserInput={setUserInput}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}